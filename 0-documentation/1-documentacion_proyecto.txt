

- Pasos a seguir - (Montar la infraestructura):
  - Mysql (base de datos)
  - Phpmyadmin (controlar la base de datos)
  - Spring java (backend) (Maven, Java 11) ( https://www.marcobehler.com/guides/a-guide-to-java-versions-and-features )
  - Nextjs react (frontend)
  - Docker - que contiene todo lo anterior
    

- Realizando pasos a seguir:
  0 - Montamos Docker con MySQL y PHPMyAdmin ( https://springhow.com/mysql-docker-container-for-local-development/ )
      -- Leer solamente apartado: Using Docker Compose for MySQL and phpMyAdmin
      -- Con esto crearemos el archivo docker-compose.yml y lo iremos rellenando con los demas servicios.
  1 - Añadimos Spring boot al fichero docker-compose.yml
    -- install Java 20 on ubuntu - https://ubuntuhandbook.org/index.php/2022/03/install-jdk-18-ubuntu/
    -- Descargamos el eclipse xD a chuparla el intelliJ
    -- Seguimos el tutorial https://springframework.guru/jwt-authentication-in-spring-microservices-jwt-token/
      --- Combinado con el tutorial https://spring.io/guides/gs/accessing-data-jpa/  para solucionar los errores de los imports con nombres deprecados como de javax -> jakarta
      --- Combinado con el libro Spring 5 Anaya para configurar la base de datos H2 (temporal, despues se cambia por mysql) (todo se configura en el application.properties, pg 157)


















================    DESCARTADO ==========================
    -- Seguimos el tutorial https://www.javainuse.com/spring/boot-jwt
    -- Descargamos IntelliJ 2019.3 e inicializamos proyecto con Spring desde el intelliJ
    -- Descargamos el proyecto de spring desde la pagina de spring initalizr
    -- configuramos intelliJ con Java 20
      --- File -> Project Structure -> (Default view) Project Settings/Project -> SDK: 20 (seleccionar el jdk20, que instalamos previamente)
      --- Añadir al pom.xml las dependencias de spring-boot-starter-data-jpa, spring-boot-starter-web y mysql-connector-java.